swagger: '2.0'
info:
  description: API permettant de gérer la base de données
  version: 1.0.0
  title: DAWAGSI Database API
  # put the contact info for your development or API team
  contact:
    name: GitHub
    url: https://github.com/SkydeFR/DAWAGSI
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: database
  description: Base de données
- name: list
  description: Liste d'images

paths:
  /database:
    get:
      tags:
        - database
      summary: Vérifie la connexion à la base de données
      operationId: connectDB
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Database'
        default:
          description: an error has occurred
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResponse'

  /list:
    get:
      tags:
        - list
      summary: Vérifie si la table est opérationnelle
      operationId: checkList
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              type: object
              required:
              - status
              properties:
                status:
                  type: string
                  enum: ["Ok", "Unreachable"]
                  example: "Ok"
        default:
          description: an error has occurred
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResponse'
  /list/create:
    post:
      tags:
        - list
      summary: Crée une nouvelle liste
      operationId: createList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        type: string
        name: name
        description: nom de la liste
        required: true
      - in: query
        type: string
        name: description
        description: description de la liste
        required: true
      responses:
        200:
          description: successful operation
        default:
          description: an error has occurred
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResponse'
  /list/selectAll:
    get:
      tags:
        - list
      summary: Affiche toutes les listes
      operationId: selectLists
      produces:
      - application/json
      responses:
        200:
          description: successful operation
        default:
          description: an error has occurred
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResponse'
  /list/{id}:
    get:
      tags:
        - list
      summary: Affiche une liste
      operationId: selectList
      produces:
      - application/json
      parameters:
      - in: path
        type: integer
        format: int64
        name: id
        description: id de la liste
        required: true
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/List'
        default:
          description: an error has occurred
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResponse'
    put:
      tags:
        - list
      summary: Met à jour une liste
      operationId: updateList
      produces:
      - application/json
      parameters:
      - in: path
        type: integer
        format: int64
        name: id
        description: id de la liste
        required: true
      - in: query
        type: string
        name: name
        description: nom de la liste
        required: false
      - in: query
        type: string
        name: description
        description: description de la liste
        required: false
      - in: query
        type: array
        name: images
        items:
          type: integer
          format: int64
        description: ID des images appartenant à la liste
        required: false
      responses:
        200:
          description: successful operation
        default:
          description: an error has occurred
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResponse'
    delete:
      tags:
        - list
      summary: Supprime une liste
      operationId: deleteList
      produces:
      - application/json
      parameters:
      - in: path
        type: integer
        format: int64
        name: id
        description: id de la liste
        required: true
      responses:
        200:
          description: successful operation
        default:
          description: an error has occurred
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResponse'
    

# Definitions of common objects
definitions:
  Database:
    type: object
    required:
    - status
    properties:
      status:
        type: string
        enum: ["Ok", "Unreachable"]
        example: "Ok"
  List:
    type: object
    required:
    - id
    - name
    - description
    - images
    properties:
      id:
        type: integer
        format: int64
        description: ID de la liste
        example: 0
      name:
        type: string
        description: Nom de la liste
        example: "Vidéo AF541X"
      description:
        type: string
        description: Description de la liste
        example: "Images obtenus depuis la séquence vidéo AF541X du 28/10/2018."
      images:
        type: array
        items:
          type: integer
          format: int64
        description: ID des images appartenant à la liste
        example: [16,17,18,19,22,23,24]
  DefaultResponse:
    type: object
    required:
    - code
    - message
    properties:
      code:
        type: string
        example: "509"
      message:
        type: string
        example: "unexpected error"

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /skyde/dawagsi_api_db/1.0.0
schemes:
 - https